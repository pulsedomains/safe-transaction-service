version: '3.5'

services:
  # nginx:
  #   image: nginx:alpine
  #   hostname: nginx
  #   ports:
  #     - "8000:8000"
  #   volumes:
  #     - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
  #     - nginx-shared:/nginx
  #   depends_on:
  #     - web

  redis:
    hostname: txs_redis
    container_name: safe_txs_redis
    image: redis:alpine
    # ports:
    #   - "6379:6379"
    networks:
      - gnosis.safe
    command:
      - --appendonly yes

  rabbitmq:
    hostname: txs_rabbitmq
    container_name: safe_txs_rabbitmq
    image: rabbitmq:alpine
    volumes:
      - ./data/rabbitmq:/var/lib/rabbitmq
    networks:
      - gnosis.safe
    # ports:
    #   - "5672:5672"

  db:
    hostname: txs_db
    container_name: safe_txs_db
    image: postgres:13-alpine
    volumes:
      - ./data/db:/var/lib/postgresql/data
    # ports:
    #   - "5432:5432"
    networks:
      - gnosis.safe
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres

  web:
    hostname: txs_web
    container_name: safe_txs_web
    build:
      context: .
      dockerfile: docker/web/Dockerfile
    env_file:
      - .env
    depends_on:
      - db
      - redis
    working_dir: /app
    ports:
      - "6001:8888"
    volumes:
      - ./data/nginx:/nginx
    networks:
      - gnosis.safe
    command: docker/web/run_web.sh

  indexer-worker: &worker
    hostname: txs_indexer
    container_name: safe_txs_indexer
    build:
      context: .
      dockerfile: docker/web/Dockerfile
    env_file:
      - .env
    environment:
      RUN_MIGRATIONS: 1
      WORKER_QUEUES: "default,indexing"
    depends_on:
      - db
      - redis
      - rabbitmq
    networks:
      - gnosis.safe
    command: docker/web/celery/worker/run.sh

  contracts-tokens-worker:
    <<: *worker
    hostname: txs_contracts_tokens
    container_name: safe_txs_contract_tokens
    environment:
      WORKER_QUEUES: "contracts,tokens"

  notifications-webhooks-worker:
    <<: *worker
    hostname: txs_noti
    container_name: safe_txs_noti
    environment:
      WORKER_QUEUES: "notifications,webhooks"

  scheduler:
    <<: *worker
    hostname: txs_scheduler
    container_name: safe_txs_scheduler
    command: docker/web/celery/scheduler/run.sh

  flower:
    <<: *worker
    hostname: txs_flower
    container_name: safe_txs_flower
    command: docker/web/celery/flower/run.sh
    # ports:
    #   - "5555:5555"

networks:
  gnosis.safe:
    name: gnosis.safe
    driver: bridge